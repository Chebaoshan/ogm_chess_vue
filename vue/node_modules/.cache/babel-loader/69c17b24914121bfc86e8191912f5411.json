{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \"Hello!\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, \"Rival:\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass($setup.data.playinfo)\n  }, [_createElementVNode(\"div\", null, [_createTextVNode(\"The next step will be: \"), _createElementVNode(\"span\", {\n    style: _normalizeStyle($setup.data.spanStyle)\n  }, _toDisplayString($setup.getPlayer), 5\n  /* TEXT, STYLE */\n  )]), _hoisted_1, _hoisted_2], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;gCAGQA,oBAAiB,KAAjB,EAAiB,IAAjB,EAAK,QAAL,EAAW;AAAA;AAAX;;gCACAA,oBAAiB,KAAjB,EAAiB,IAAjB,EAAK,QAAL,EAAW;AAAA;AAAX;;;uBAHJC,oBAIM,KAJN,EAIM;IAJAC,KAAK,kBAAEC,YAAKC,QAAP;EAIL,CAJN,GACIJ,oBAAoF,KAApF,EAAoF,IAApF,EAAoF,kBAA/E,0BAA+E,EAAxDA,oBAAkD,MAAlD,EAAkD;IAA3CK,KAAK,kBAAEF,YAAKG,SAAP;EAAsC,CAAlD,mBAAgCH,iBAAhC,EAAyC;EAAA;EAAzC,CAAwD,CAApF,GACAI,YACAC,WAHJ;;EAAA","names":["_createElementVNode","_createElementBlock","class","$setup","playinfo","style","spanStyle","_hoisted_1","_hoisted_2"],"sourceRoot":"","sources":["/Users/strawberrypompey/tacos/frontend/vue/src/components/Playinfo.vue"],"sourcesContent":["<template>\n    <div :class=\"data.playinfo\">\n        <div>The next step will be: <span :style=\"data.spanStyle\">{{getPlayer}}</span></div>\n        <div>Hello!</div>\n        <div>Rival:</div>\n    </div>\n</template>\n<script setup>\nimport { useGameStore } from '../store/store'\nimport { computed, reactive } from 'vue'\nconst store = useGameStore()\nconst getPlayer = computed(() => { return store.currentPlayer() })\nconst data = reactive({\n    spanStyle: {\n        \"color\": \"red\",\n        \"font-weight\": \"bolder\",\n        \"font-size\": \"20px\"\n    },\n    playinfo: {\n        'position': 'relative',\n        'margin-bottom': '50px',\n        'font-size': \"20px\",\n        'font-style': 'oblique',\n        'font-weight': 'unset'\n    }\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}