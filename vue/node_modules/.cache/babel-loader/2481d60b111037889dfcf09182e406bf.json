{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"square\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, _toDisplayString(_ctx.cell), 1\n  /* TEXT */\n  );\n}","map":{"version":3,"mappings":";;uBACIA,oBAEM,KAFN,EAEM;IAFDC,KAAK,EAAC,QAEL;IAFeC,OAAK,yCAAEC,6CAAF;EAEpB,CAFN,mBACMA,UADN,EACU;EAAA;EADV","names":["_createElementBlock","class","onClick","_ctx"],"sourceRoot":"","sources":["/Users/strawberrypompey/tacos/frontend/vue/src/components/Square.vue"],"sourcesContent":["<template>\n    <div class=\"square\" @click=\"handleClick\">\n        {{cell}}\n    </div>\n</template>\n<script setup  lang=\"js\">\nimport { useGameStore } from '../store/gameStore'\nimport { winner } from '../utils/winner'\nimport { defineProps, reactive, toRefs, computed } from 'vue'\nconst props = defineProps(['position'])\nconst store = useGameStore()\nconst data = reactive({ pos: props.position, cell: null })\nconst getResult = computed(() => { return store.result })\nconst getHistory = computed(() => { return store.history })\nconst { pos, cell } = toRefs(data)\nwatch([getResult], () => {\n    cell.value = null\n    console.log(store.history)\n})\nconst handleClick = () => {\n    const a = store.getCount() % 2 == 0 ? 'X' : 'O'\n    if (cell.value === null) {\n        cell.value = a\n        store.renewHistory(pos)\n        store.addCount();\n    }\n    const res = winner(getHistory)\n    if (res.result) {\n        alert(`${res.winner}`)\n        store.setResult();\n        setTimeout(() => { store.$reset(); }, 10)\n    }\n}\n</script>\n<style scoped>\n.square {\n    display: inline-block;\n    height: 100px;\n    width: 100px;\n    border: solid 2px black;\n    font-size: 50px;\n    line-height: 100px;\n    text-align: center;\n}\n\n.square:hover {\n    color: red;\n    border-color: red;\n}\n</style>"]},"metadata":{},"sourceType":"module"}