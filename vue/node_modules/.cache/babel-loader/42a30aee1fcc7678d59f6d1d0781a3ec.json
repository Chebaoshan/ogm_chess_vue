{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"playinfo\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, \"Hello!\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, \"Rival:\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createTextVNode(\"The next step will be: \"), _createElementVNode(\"span\", {\n    style: _normalizeStyle($setup.data.spanStyle)\n  }, _toDisplayString($setup.getPlayer), 5\n  /* TEXT, STYLE */\n  )]), _hoisted_2, _hoisted_3]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;gCAEPC,oBAAiB,KAAjB,EAAiB,IAAjB,EAAK,QAAL,EAAW;AAAA;AAAX;;gCACAA,oBAAiB,KAAjB,EAAiB,IAAjB,EAAK,QAAL,EAAW;AAAA;AAAX;;;uBAHJC,oBAIM,KAJN,cAIM,CAHFD,oBAAoF,KAApF,EAAoF,IAApF,EAAoF,kBAA/E,0BAA+E,EAAxDA,oBAAkD,MAAlD,EAAkD;IAA3CE,KAAK,kBAAEC,YAAKC,SAAP;EAAsC,CAAlD,mBAAgCD,iBAAhC,EAAyC;EAAA;EAAzC,CAAwD,CAApF,CAGE,EAFFE,UAEE,EADFC,UACE,CAJN","names":["class","_createElementVNode","_createElementBlock","style","$setup","spanStyle","_hoisted_2","_hoisted_3"],"sourceRoot":"","sources":["/Users/strawberrypompey/tacos/frontend/vue/src/components/Playinfo.vue"],"sourcesContent":["<template>\n    <div class=\"playinfo\">\n        <div>The next step will be: <span :style=\"data.spanStyle\">{{getPlayer}}</span></div>\n        <div>Hello!</div>\n        <div>Rival:</div>\n    </div>\n</template>\n<script setup>\nimport { useGameStore } from '../store/store'\nimport { computed } from 'vue'\nconst store = useGameStore()\nconst data = reactive({\n    spanStyle: {\n        \"color\": \"red\",\n        \"font-weight\": \"bolder\",\n        \"font-size\": \"20px\"\n    }\n})\nconst getPlayer = computed(() => { return store.currentPlayer() })\n</script>\n<style>\n.playinfo {\n    position: relative;\n    margin-bottom: 50px;\n    font-size: \"20px\";\n    font-style: oblique;\n    font-weight: unset;\n}\n</style>"]},"metadata":{},"sourceType":"module"}