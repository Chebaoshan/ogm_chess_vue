{"ast":null,"code":"import { useGameStore } from '../store/store';\nimport { winner } from '../utils/winner';\nimport { watch, reactive, toRefs, computed, onUpdated } from 'vue';\nexport default {\n  __name: 'Square',\n  props: ['position'],\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const store = useGameStore();\n    const data = reactive({\n      pos: props.position,\n      cell: null\n    });\n    const getResult = computed(() => {\n      return store.result;\n    });\n    const getHistory = computed(() => {\n      return store.history;\n    });\n    const {\n      pos,\n      cell\n    } = toRefs(data);\n    watch([getResult], () => {\n      cell.value = null;\n      console.log(store.history);\n    });\n\n    const handleClick = () => {\n      const current_value = store.getCount() % 2 == 0 ? 'X' : 'O';\n\n      if (cell.value === null) {\n        cell.value = current_value;\n        onUpdated(() => {\n          store.renewHistory(pos);\n        });\n        store.addCount();\n      }\n\n      const res = winner(getHistory);\n\n      if (res.result) {\n        alert(`${res.winner}`);\n        store.setResult();\n        setTimeout(() => {\n          store.$reset();\n        }, 10);\n      }\n    };\n\n    const __returned__ = {\n      props,\n      store,\n      data,\n      getResult,\n      getHistory,\n      pos,\n      cell,\n      handleClick,\n      useGameStore,\n      winner,\n      watch,\n      reactive,\n      toRefs,\n      computed,\n      onUpdated\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAMA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,SAA5C,QAA6D,KAA7D;;;;;;;;;;IAEA,MAAMC,KAAK,GAAGP,YAAY,EAA1B;IACA,MAAMQ,IAAI,GAAGL,QAAQ,CAAC;MAAEM,GAAG,EAAEC,KAAK,CAACC,QAAb;MAAuBC,IAAI,EAAE;IAA7B,CAAD,CAArB;IACA,MAAMC,SAAS,GAAGR,QAAQ,CAAC,MAAM;MAAE,OAAOE,KAAK,CAACO,MAAb;IAAqB,CAA9B,CAA1B;IACA,MAAMC,UAAU,GAAGV,QAAQ,CAAC,MAAM;MAAE,OAAOE,KAAK,CAACS,OAAb;IAAsB,CAA/B,CAA3B;IACA,MAAM;MAAEP,GAAF;MAAOG;IAAP,IAAgBR,MAAM,CAACI,IAAD,CAA5B;IACAN,KAAK,CAAC,CAACW,SAAD,CAAD,EAAc,MAAM;MACrBD,IAAI,CAACK,KAAL,GAAa,IAAb;MACAC,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACS,OAAlB;IACH,CAHI,CAAL;;IAIA,MAAMI,WAAW,GAAG,MAAM;MACtB,MAAMC,aAAa,GAAGd,KAAK,CAACe,QAAN,KAAmB,CAAnB,IAAwB,CAAxB,GAA4B,GAA5B,GAAkC,GAAxD;;MACA,IAAIV,IAAI,CAACK,KAAL,KAAe,IAAnB,EAAyB;QACrBL,IAAI,CAACK,KAAL,GAAaI,aAAb;QACAf,SAAS,CAAC,MAAM;UAAEC,KAAK,CAACgB,YAAN,CAAmBd,GAAnB;QAAyB,CAAlC,CAAT;QACAF,KAAK,CAACiB,QAAN;MACH;;MACD,MAAMC,GAAG,GAAGxB,MAAM,CAACc,UAAD,CAAlB;;MACA,IAAIU,GAAG,CAACX,MAAR,EAAgB;QACZY,KAAK,CAAE,GAAED,GAAG,CAACxB,MAAO,EAAf,CAAL;QACAM,KAAK,CAACoB,SAAN;QACAC,UAAU,CAAC,MAAM;UAAErB,KAAK,CAACsB,MAAN;QAAiB,CAA1B,EAA4B,EAA5B,CAAV;MACH;IACJ,CAbD","names":["useGameStore","winner","watch","reactive","toRefs","computed","onUpdated","store","data","pos","props","position","cell","getResult","result","getHistory","history","value","console","log","handleClick","current_value","getCount","renewHistory","addCount","res","alert","setResult","setTimeout","$reset"],"sources":["/Users/strawberrypompey/tacos/frontend/vue/src/components/Square.vue"],"sourcesContent":["<template>\n    <div class=\"square\" @click=\"handleClick\">\n        {{cell}}\n    </div>\n</template>\n<script setup>\nimport { useGameStore } from '../store/store'\nimport { winner } from '../utils/winner'\nimport { watch, reactive, toRefs, computed, onUpdated } from 'vue'\nconst props = defineProps(['position'])\nconst store = useGameStore()\nconst data = reactive({ pos: props.position, cell: null })\nconst getResult = computed(() => { return store.result })\nconst getHistory = computed(() => { return store.history })\nconst { pos, cell } = toRefs(data)\nwatch([getResult], () => {\n    cell.value = null\n    console.log(store.history)\n})\nconst handleClick = () => {\n    const current_value = store.getCount() % 2 == 0 ? 'X' : 'O'\n    if (cell.value === null) {\n        cell.value = current_value\n        onUpdated(() => { store.renewHistory(pos) })\n        store.addCount();\n    }\n    const res = winner(getHistory)\n    if (res.result) {\n        alert(`${res.winner}`)\n        store.setResult();\n        setTimeout(() => { store.$reset(); }, 10)\n    }\n}\n</script>\n<style scoped>\n.square {\n    display: inline-block;\n    height: 100px;\n    width: 100px;\n    border: solid 2px black;\n    font-size: 50px;\n    line-height: 100px;\n    text-align: center;\n}\n\n.square:hover {\n    color: red;\n    border-color: red;\n}\n</style>"]},"metadata":{},"sourceType":"module"}